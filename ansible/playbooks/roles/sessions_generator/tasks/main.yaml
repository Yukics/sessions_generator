- name: "Create {{ git_destination }}"
  ansible.builtin.file:
    state: directory
    path: "{{ git_destination }}"

- name: "Clone repo git://"
  ansible.builtin.git:
    repo: "{{ git_url }}"
    dest:  "{{ git_destination }}"
    force: true
  when: git_clone_type == "git"

- name: "Download repo https://"
  ansible.builtin.unarchive:
    src: "{{ git_url }}"
    dest: "{{ git_destination }}"
    remote_src: yes
    validate_certs: false
  when: git_clone_type == "http"

- name: "Generate configuration"
  copy:
    content: "{{ item | to_nice_yaml(indent=2) }}"
    dest: "{{ git_destination }}/src/conf/{{ item.keys() | join('') }}.yml"
  loop: "{{ sessions_generator_conf }}"
  no_log: true

- name: "Change loglevel"
  ansible.builtin.replace:
    path: "{{ git_destination }}/src/lib/logs.py"
    regexp: 'logger.setLevel\("DEBUG"\)'
    replace: 'logger.setLevel("{{ sessions_generator_loglevel }}")'

- name: Execute sessions_generator
  ansible.builtin.shell: |
    set -e
    cd {{ git_destination }}
    ./start.sh withdeps